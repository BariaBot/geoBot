package ru.gang.datingBot.bot;

import ru.gang.datingBot.model.User;
import ru.gang.datingBot.service.UserService;

/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–æ—Ñ–∏–ª—è–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤–Ω—É—Ç—Ä–∏ –±–æ—Ç–∞
 */
public class ProfileService {

  private final UserService userService;
  private final KeyboardService keyboardService;

  public ProfileService(UserService userService, KeyboardService keyboardService) {
    this.userService = userService;
    this.keyboardService = keyboardService;
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   */
  public String getDisplayName(User user) {
    if (user.getUsername() != null && !user.getUsername().isEmpty()) {
      return user.getUsername();
    } else if (user.getFirstName() != null && !user.getFirstName().isEmpty()) {
      String displayName = user.getFirstName();
      if (user.getLastName() != null && !user.getLastName().isEmpty()) {
        displayName += " " + user.getLastName();
      }
      return displayName;
    } else {
      return "–ê–Ω–æ–Ω–∏–º–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å";
    }
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
   */
  public String getGenderDisplay(String gender) {
    if (gender == null) return "–ù–µ —É–∫–∞–∑–∞–Ω";
    return switch (gender) {
      case "male" -> "–ú—É–∂—Å–∫–æ–π";
      case "female" -> "–ñ–µ–Ω—Å–∫–∏–π";
      case "other" -> "–î—Ä—É–≥–æ–π";
      default -> "–ù–µ —É–∫–∞–∑–∞–Ω";
    };
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –ø–æ –ø–æ–ª—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
   */
  public String getGenderPreferenceDisplay(String genderPref) {
    if (genderPref == null) return "–õ—é–±–æ–π";
    return switch (genderPref) {
      case "male" -> "–ú—É–∂—Å–∫–æ–π";
      case "female" -> "–ñ–µ–Ω—Å–∫–∏–π";
      case "any" -> "–õ—é–±–æ–π";
      default -> "–õ—é–±–æ–π";
    };
  }

  /**
   * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ñ–∏–ª–µ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
   */
  public String formatNearbyUserProfile(User profile, int currentIndex, int totalUsers) {
    // –ü–æ–ª—É—á–∞–µ–º –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è
    String displayName = getDisplayName(profile);

    // –í–∫–ª—é—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø—Ä–æ—Ñ–∏–ª—è
    StringBuilder profileInfo = new StringBuilder();
    profileInfo.append("‚ú® @").append(displayName).append(" —Ä—è–¥–æ–º!");

    if (profile.getAge() != null) {
      profileInfo.append("\n\nüéÇ –í–æ–∑—Ä–∞—Å—Ç: ").append(profile.getAge());
    }

    if (profile.getGender() != null && !profile.getGender().isEmpty()) {
      profileInfo.append("\n‚öß –ü–æ–ª: ").append(profile.getGenderDisplay());
    }

    if (profile.getDescription() != null && !profile.getDescription().isEmpty()) {
      profileInfo.append("\n\nüìù –û —Å–µ–±–µ: ").append(profile.getDescription());
    }

    if (profile.getInterests() != null && !profile.getInterests().isEmpty()) {
      profileInfo.append("\n\n‚≠ê –ò–Ω—Ç–µ—Ä–µ—Å—ã: ").append(profile.getInterests());
    }

    // –î–æ–±–∞–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –ø—Ä–æ—Ñ–∏–ª–µ–π
    profileInfo.append("\n\nüî¢ –ü—Ä–æ—Ñ–∏–ª—å ").append(currentIndex + 1).append(" –∏–∑ ").append(totalUsers);

    return profileInfo.toString();
  }

  /**
   * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—Ä–æ—Å–µ –Ω–∞ –≤—Å—Ç—Ä–µ—á—É
   */
  public String formatMeetingRequest(User sender, String message) {
    String senderName = getDisplayName(sender);
    
    StringBuilder requestInfo = new StringBuilder();
    requestInfo.append("‚ú® ").append(senderName).append(" –æ—Ç–ø—Ä–∞–≤–∏–ª –≤–∞–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—Å—Ç—Ä–µ—á—É!");

    if (sender.getAge() != null) {
      requestInfo.append("\n\nüéÇ –í–æ–∑—Ä–∞—Å—Ç: ").append(sender.getAge());
    }

    if (sender.getGender() != null && !sender.getGender().isEmpty()) {
      requestInfo.append("\n‚öß –ü–æ–ª: ").append(sender.getGenderDisplay());
    }

    if (sender.getDescription() != null && !sender.getDescription().isEmpty()) {
      requestInfo.append("\n\nüìù –û —Å–µ–±–µ: ").append(sender.getDescription());
    }

    if (sender.getInterests() != null && !sender.getInterests().isEmpty()) {
      requestInfo.append("\n\n‚≠ê –ò–Ω—Ç–µ—Ä–µ—Å—ã: ").append(sender.getInterests());
    }

    // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≤—Å—Ç—Ä–µ—á—É
    requestInfo.append("\n\nüí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: ").append(message);

    return requestInfo.toString();
  }
  
  /**
   * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –ø–æ–∏—Å–∫–∞
   */
  public String formatSearchSettings(User user) {
    StringBuilder settingsInfo = new StringBuilder();
    settingsInfo.append("üîç *–í–∞—à–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞:*\n\n");
    
    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–æ–∑—Ä–∞—Å—Ç–Ω–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ
    String ageRange = "–õ—é–±–æ–π";
    if (user.getMinAgePreference() != null && user.getMaxAgePreference() != null) {
      ageRange = user.getMinAgePreference() + " - " + user.getMaxAgePreference() + " –ª–µ—Ç";
    } else if (user.getMinAgePreference() != null) {
      ageRange = "–æ—Ç " + user.getMinAgePreference() + " –ª–µ—Ç";
    } else if (user.getMaxAgePreference() != null) {
      ageRange = "–¥–æ " + user.getMaxAgePreference() + " –ª–µ—Ç";
    }
    
    settingsInfo.append("üéØ *–í–æ–∑—Ä–∞—Å—Ç:* ").append(ageRange).append("\n");
    settingsInfo.append("üë• *–ü–æ–ª:* ").append(user.getGenderPreferenceDisplay()).append("\n");
    settingsInfo.append("üìç *–†–∞–¥–∏—É—Å –ø–æ–∏—Å–∫–∞:* ").append(user.getSearchRadius()).append(" –∫–º\n");
    
    return settingsInfo.toString();
  }
}