package ru.gang.datingBot.handler;

import org.telegram.telegrambots.meta.api.objects.Update;
import ru.gang.datingBot.bot.KeyboardService;
import ru.gang.datingBot.bot.MessageSender;
import ru.gang.datingBot.bot.UserStateManager;
import ru.gang.datingBot.model.User;
import ru.gang.datingBot.service.UserService;

import java.util.List;

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –≥–µ–æ–ª–æ–∫–∞—Ü–∏–µ–π
 */
public class LocationHandler {

  private final UserService userService;
  private final UserStateManager stateManager;
  private final MessageSender messageSender;
  private final KeyboardService keyboardService;
  // –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ CallbackQueryHandler
  private CallbackQueryHandler callbackQueryHandler;

  public LocationHandler(
          UserService userService,
          UserStateManager stateManager,
          MessageSender messageSender) {
    this.userService = userService;
    this.stateManager = stateManager;
    this.messageSender = messageSender;
    this.keyboardService = new KeyboardService();
  }

  /**
   * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ CallbackQueryHandler
   * –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–∑–≤–∞—Ç—å —ç—Ç–æ—Ç –º–µ—Ç–æ–¥ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
   */
  public void setCallbackQueryHandler(CallbackQueryHandler callbackQueryHandler) {
    this.callbackQueryHandler = callbackQueryHandler;
  }

  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å –≥–µ–æ–ª–æ–∫–∞—Ü–∏–µ–π
   */
  public void processLocationMessage(Long chatId, double latitude, double longitude, Integer messageId, Update update) {
    Integer duration = stateManager.getLocationDuration(chatId);
    Integer radius = stateManager.getSearchRadius(chatId);

    if (duration != null && radius != null) {
      var from = update.getMessage().getFrom();

      String telegramUsername = (from.getUserName() != null) ? from.getUserName() : null;
      String firstName = (from.getFirstName() != null) ? from.getFirstName() : null;
      String lastName = (from.getLastName() != null) ? from.getLastName() : null;
      String phoneNumber = (update.getMessage().hasContact()) ? update.getMessage().getContact().getPhoneNumber() : null;

      userService.updateUserLocation(chatId, latitude, longitude, duration, radius, telegramUsername, firstName, lastName, phoneNumber);

      // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ—é –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é..."
      messageSender.deleteMessage(chatId, messageId);

      messageSender.sendTextMessageWithKeyboard(
              chatId,
              "üìç –í–∞—à–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ! –ú—ã –∏—â–µ–º –¥–ª—è –≤–∞—Å –ª—é–¥–µ–π –ø–æ–±–ª–∏–∑–æ—Å—Ç–∏...",
              keyboardService.createMainKeyboard());

      // –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ–±–ª–∏–∑–æ—Å—Ç–∏ —Å —É—á–µ—Ç–æ–º —Ñ–∏–ª—å—Ç—Ä–æ–≤
      List<User> nearbyUsers = userService.findNearbyUsers(chatId, latitude, longitude, radius);
      System.out.println("DEBUG: –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ–±–ª–∏–∑–æ—Å—Ç–∏: " + (nearbyUsers != null ? nearbyUsers.size() : 0));

      // –ö—ç—à–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞
      stateManager.cacheNearbyUsers(chatId, nearbyUsers);

      // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö
      showNearbyUsers(chatId, nearbyUsers);
    } else {
      messageSender.sendTextMessageWithKeyboard(
              chatId,
              "‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –∏ —Ä–∞–¥–∏—É—Å –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏.",
              keyboardService.createTimeSelectionKeyboard());
    }
  }

  /**
   * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö
   */
  private void showNearbyUsers(Long chatId, List<User> nearbyUsers) {
    if (nearbyUsers == null || nearbyUsers.isEmpty()) {
      messageSender.sendTextMessageWithKeyboard(
              chatId,
              "üòî –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–∏–∫–æ–≥–æ –ø–æ–±–ª–∏–∑–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.\n\n" +
                      "üìç –£ –≤–∞—Å –∞–∫—Ç–∏–≤–Ω–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—è –Ω–∞ " + stateManager.getLocationDuration(chatId) +
                      " —á–∞—Å–æ–≤. –ï—Å–ª–∏ –∫—Ç–æ-—Ç–æ –æ–∫–∞–∂–µ—Ç—Å—è —Ä—è–¥–æ–º, –º—ã –≤–∞–º —Å–æ–æ–±—â–∏–º!",
              keyboardService.createMainKeyboard());
      return;
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    messageSender.sendTextMessageWithKeyboard(
            chatId,
            "üîç –ù–∞–π–¥–µ–Ω–æ " + nearbyUsers.size() + " —á–µ–ª–æ–≤–µ–∫ –ø–æ–±–ª–∏–∑–æ—Å—Ç–∏!",
            keyboardService.createMainKeyboard());

    // –û—Ç–æ–±—Ä–∞–∑–∏–º –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (callbackQueryHandler != null) {
      System.out.println("DEBUG: –í—ã–∑—ã–≤–∞–µ–º –ø–æ–∫–∞–∑ –ø—Ä–æ—Ñ–∏–ª—è –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
      // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –ø–æ–∫–∞–∑–æ–º –ø—Ä–æ—Ñ–∏–ª—è
      try {
        Thread.sleep(500);
      } catch (InterruptedException e) {
        Thread.currentThread().interrupt();
      }
      callbackQueryHandler.showCurrentNearbyUser(chatId);
    } else {
      System.out.println("DEBUG: callbackQueryHandler —Ä–∞–≤–µ–Ω null, –Ω–µ –º–æ–≥—É –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å");
      messageSender.sendTextMessageWithKeyboard(
              chatId,
              "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±–Ω–æ–≤–∏—Ç–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é –ø–æ–∑–∂–µ.",
              keyboardService.createMainKeyboard());
    }
  }
}