package ru.gang.datingBot.handler;

import org.telegram.telegrambots.meta.api.objects.PhotoSize;
import ru.gang.datingBot.service.KeyboardService;
import ru.gang.datingBot.bot.MessageSender;
import ru.gang.datingBot.service.ProfileService;
import ru.gang.datingBot.bot.UserStateManager;
import ru.gang.datingBot.bot.UserStateManager.UserState;
import ru.gang.datingBot.model.User;
import ru.gang.datingBot.service.MeetingService;
import ru.gang.datingBot.service.UserService;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.time.LocalDateTime;
import java.util.Comparator;
import java.util.List;
import lombok.RequiredArgsConstructor;

@RequiredArgsConstructor
public class PhotoHandler {

  private static final Logger log = LoggerFactory.getLogger(PhotoHandler.class);

  private final UserService userService;
  private final MeetingService meetingService;
  private final UserStateManager stateManager;
  private final MessageSender messageSender;

  public void processPhotoMessage(Long chatId, List<PhotoSize> photos, Integer messageId) {
    UserState currentState = stateManager.getUserState(chatId);

    PhotoSize largestPhoto = photos.stream()
            .max(Comparator.comparing(PhotoSize::getFileSize))
            .orElse(null);

    if (largestPhoto == null) {
      messageSender.sendTextMessage(chatId, "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–æ—Ç–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
      return;
    }

    String fileId = largestPhoto.getFileId();
    log.debug("–ü–æ–ª—É—á–µ–Ω–æ —Ñ–æ—Ç–æ —Å fileId: " + fileId);

    switch (currentState) {
      case WAITING_FOR_PHOTO:
        processProfilePhoto(chatId, fileId);
        break;

      case WAITING_FOR_MEETING_PHOTO:
        processMeetingPhoto(chatId, fileId);
        break;

      default:
        messageSender.sendTextMessageWithKeyboard(
                chatId,
                "üì∏ –•–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è? –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /edit_profile",
                new KeyboardService().createMainKeyboard());
        break;
    }
  }

  private void processProfilePhoto(Long chatId, String fileId) {
    log.debug("–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è " + chatId);
    userService.updateUserPhoto(chatId, fileId);

    int completionPercentage = userService.getProfileCompletionPercentage(chatId);
    messageSender.sendTextMessageWithKeyboard(
            chatId,
            "‚úÖ –í–∞—à–µ —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–æ!\n\n" +
                    "üèÜ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –∑–∞–ø–æ–ª–Ω–µ–Ω –Ω–∞ " + completionPercentage + "%\n\n" +
                    "–ß—Ç–æ–±—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /profile\n" +
                    "–î–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /edit_profile",
            new KeyboardService().createMainKeyboard());

    stateManager.setUserState(chatId, UserState.NONE);
  }

  private void processMeetingPhoto(Long chatId, String fileId) {
    log.debug("–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≤—Å—Ç—Ä–µ—á—É –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è " + chatId);
    stateManager.saveMeetingRequestPhoto(chatId, fileId);

    Long targetUserId = stateManager.getMeetingRequestTarget(chatId);
    String message = stateManager.getMeetingRequestMessage(chatId);

    if (targetUserId != null && message != null) {
      log.debug("–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≤—Å—Ç—Ä–µ—á—É —Å —Ñ–æ—Ç–æ –æ—Ç " + chatId + " –∫ " + targetUserId);
      try {
        meetingService.sendMeetingRequest(chatId, targetUserId, message, LocalDateTime.now().plusHours(1), fileId);

        notifyUserAboutMeetingRequest(targetUserId, chatId);

        messageSender.sendTextMessageWithKeyboard(
                chatId,
                "‚úÖ –ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—Å—Ç—Ä–µ—á—É —Å —Ñ–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!",
                new KeyboardService().createMainKeyboard());

        stateManager.clearMeetingRequestData(chatId);
      } catch (Exception e) {
        log.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≤—Å—Ç—Ä–µ—á—É", e);
        messageSender.sendTextMessage(chatId, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
      }
    } else {
      log.error("–û—à–∏–±–∫–∞ - targetUserId –∏–ª–∏ message —Ä–∞–≤–Ω—ã null");
      messageSender.sendTextMessage(chatId, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
    }

    stateManager.setUserState(chatId, UserState.NONE);
  }

  private void notifyUserAboutMeetingRequest(Long receiverId, Long senderId) {
    log.debug("–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–ø—Ä–æ—Å–µ –Ω–∞ –≤—Å—Ç—Ä–µ—á—É –∫ " + receiverId + " –æ—Ç " + senderId);
    User sender = userService.getUserByTelegramId(senderId);
    String message = stateManager.getMeetingRequestMessage(senderId);

    if (sender == null || message == null) {
      log.error("–û—à–∏–±–∫–∞ - –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã");
      return;
    }

    KeyboardService keyboardService = new KeyboardService();
    ProfileService profileService = new ProfileService(userService, keyboardService);
    
    String requestInfo = profileService.formatMeetingRequest(sender, message);

    try {
      messageSender.sendTextMessageWithKeyboard(
              receiverId,
              requestInfo,
              keyboardService.createMeetingRequestKeyboard(senderId));

      if (sender.getPhotoFileId() != null && !sender.getPhotoFileId().isEmpty()) {
        messageSender.sendPhoto(receiverId, sender.getPhotoFileId(), null);
      }

      String photoFileId = stateManager.getMeetingRequestPhoto(senderId);
      if (photoFileId != null && !photoFileId.isEmpty()) {
        messageSender.sendPhoto(receiverId, photoFileId, "üì∏ –§–æ—Ç–æ –∫ –∑–∞–ø—Ä–æ—Å—É –Ω–∞ –≤—Å—Ç—Ä–µ—á—É");
      }
      
      log.debug("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–ø—Ä–æ—Å–µ –Ω–∞ –≤—Å—Ç—Ä–µ—á—É —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ");
    } catch (Exception e) {
      log.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", e);
      messageSender.sendTextMessage(
              receiverId,
              requestInfo + "\n\n–ß—Ç–æ–±—ã –æ—Ç–≤–µ—Ç–∏—Ç—å, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã:\n/accept_" + senderId + " - –ø—Ä–∏–Ω—è—Ç—å\n/decline_" + senderId + " - –æ—Ç–∫–ª–æ–Ω–∏—Ç—å");
    }
  }
}