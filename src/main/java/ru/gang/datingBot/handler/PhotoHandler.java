package ru.gang.datingBot.handler;

import org.telegram.telegrambots.meta.api.objects.PhotoSize;
import ru.gang.datingBot.bot.KeyboardService;
import ru.gang.datingBot.bot.MessageSender;
import ru.gang.datingBot.bot.ProfileService;
import ru.gang.datingBot.bot.UserStateManager;
import ru.gang.datingBot.bot.UserStateManager.UserState;
import ru.gang.datingBot.model.User;
import ru.gang.datingBot.service.MeetingService;
import ru.gang.datingBot.service.UserService;

import java.time.LocalDateTime;
import java.util.Comparator;
import java.util.List;

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏
 */
public class PhotoHandler {

  private final UserService userService;
  private final MeetingService meetingService;
  private final UserStateManager stateManager;
  private final MessageSender messageSender;

  public PhotoHandler(
          UserService userService,
          MeetingService meetingService,
          UserStateManager stateManager,
          MessageSender messageSender) {
    this.userService = userService;
    this.meetingService = meetingService;
    this.stateManager = stateManager;
    this.messageSender = messageSender;
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
   */
  public void processPhotoMessage(Long chatId, List<PhotoSize> photos, Integer messageId) {
    UserState currentState = stateManager.getUserState(chatId);

    // –ü–æ–ª—É—á–∞–µ–º —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ —Ñ–æ—Ç–æ (–ª—É—á—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ)
    PhotoSize largestPhoto = photos.stream()
            .max(Comparator.comparing(PhotoSize::getFileSize))
            .orElse(null);

    if (largestPhoto == null) {
      messageSender.sendTextMessage(chatId, "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–æ—Ç–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
      return;
    }

    String fileId = largestPhoto.getFileId();

    switch (currentState) {
      case WAITING_FOR_PHOTO:
        processProfilePhoto(chatId, fileId);
        break;

      case WAITING_FOR_MEETING_PHOTO:
        processMeetingPhoto(chatId, fileId);
        break;

      default:
        // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —Ñ–æ—Ç–æ –≤–Ω–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
        messageSender.sendTextMessageWithKeyboard(
                chatId,
                "üì∏ –•–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è? –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /edit_profile",
                new KeyboardService().createMainKeyboard());
        break;
    }
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è
   */
  private void processProfilePhoto(Long chatId, String fileId) {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è
    userService.updateUserPhoto(chatId, fileId);

    int completionPercentage = userService.getProfileCompletionPercentage(chatId);
    messageSender.sendTextMessageWithKeyboard(
            chatId,
            "‚úÖ –í–∞—à–µ —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–æ!\n\n" +
                    "üèÜ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –∑–∞–ø–æ–ª–Ω–µ–Ω –Ω–∞ " + completionPercentage + "%\n\n" +
                    "–ß—Ç–æ–±—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /profile\n" +
                    "–î–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /edit_profile",
            new KeyboardService().createMainKeyboard());

    stateManager.setUserState(chatId, UserState.NONE);
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≤—Å—Ç—Ä–µ—á—É
   */
  private void processMeetingPhoto(Long chatId, String fileId) {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–æ—Ç–æ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≤—Å—Ç—Ä–µ—á—É
    stateManager.saveMeetingRequestPhoto(chatId, fileId);

    Long targetUserId = stateManager.getMeetingRequestTarget(chatId);
    String message = stateManager.getMeetingRequestMessage(chatId);

    if (targetUserId != null && message != null) {
      meetingService.sendMeetingRequest(chatId, targetUserId, message, LocalDateTime.now().plusHours(1), fileId);

      // –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—É—á–∞—Ç–µ–ª—è –æ –∑–∞–ø—Ä–æ—Å–µ
      notifyUserAboutMeetingRequest(targetUserId, chatId);

      messageSender.sendTextMessageWithKeyboard(
              chatId,
              "‚úÖ –ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—Å—Ç—Ä–µ—á—É —Å —Ñ–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!",
              new KeyboardService().createMainKeyboard());

      // –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      stateManager.clearMeetingRequestData(chatId);
    } else {
      messageSender.sendTextMessage(chatId, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
    }

    stateManager.setUserState(chatId, UserState.NONE);
  }

  /**
   * –£–≤–µ–¥–æ–º–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –∑–∞–ø—Ä–æ—Å–µ –Ω–∞ –≤—Å—Ç—Ä–µ—á—É
   */
  private void notifyUserAboutMeetingRequest(Long receiverId, Long senderId) {
    User sender = userService.getUserByTelegramId(senderId);
    String message = stateManager.getMeetingRequestMessage(senderId);

    if (sender == null || message == null) {
      return;
    }

    ProfileService profileService = new ProfileService(userService, new KeyboardService());
    String requestInfo = profileService.formatMeetingRequest(sender, message);

    messageSender.sendTextMessageWithKeyboard(
            receiverId,
            requestInfo,
            new KeyboardService().createMeetingRequestKeyboard(senderId));

    if (sender.getPhotoFileId() != null && !sender.getPhotoFileId().isEmpty()) {
      messageSender.sendPhoto(receiverId, sender.getPhotoFileId(), null);
    }

    String photoFileId = stateManager.getMeetingRequestPhoto(senderId);
    if (photoFileId != null && !photoFileId.isEmpty()) {
      messageSender.sendPhoto(receiverId, photoFileId, "üì∏ –§–æ—Ç–æ –∫ –∑–∞–ø—Ä–æ—Å—É –Ω–∞ –≤—Å—Ç—Ä–µ—á—É");
    }
  }
}