package ru.gang.datingBot.handler;

import lombok.RequiredArgsConstructor;
import ru.gang.datingBot.bot.MessageSender;
import ru.gang.datingBot.bot.UserStateManager;
import ru.gang.datingBot.model.Subscription;
import ru.gang.datingBot.model.User;
import ru.gang.datingBot.service.KeyboardService;
import ru.gang.datingBot.service.ProfileService;
import ru.gang.datingBot.service.SubscriptionService;
import ru.gang.datingBot.service.UserService;

import java.time.LocalDateTime;
import java.util.Map;

@RequiredArgsConstructor
public class VipHandler {

    private final UserService userService;
    private final SubscriptionService subscriptionService;
    private final UserStateManager stateManager;
    private final MessageSender messageSender;
    private final KeyboardService keyboardService;
    private final ProfileService profileService;

    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /vip - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ VIP-—Å—Ç–∞—Ç—É—Å–µ –∏ –æ–ø—Ü–∏–∏ –ø–æ–∫—É–ø–∫–∏
     */
    public void processVipCommand(Long chatId) {
        User user = userService.getUserByTelegramId(chatId);
        if (user == null) {
            messageSender.sendTextMessage(chatId, "‚ö†Ô∏è –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±–Ω–æ–≤–∏—Ç–µ —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /edit_profile");
            return;
        }

        Map<String, Object> vipInfo = subscriptionService.getVipInfo(chatId);
        boolean isVipActive = (boolean) vipInfo.getOrDefault("isVip", false);
        
        String vipMessage = profileService.formatVipInfo(
                user,
                isVipActive,
                isVipActive ? (LocalDateTime) vipInfo.get("expiresAt") : null,
                isVipActive ? (String) vipInfo.get("planType") : null
        );

        if (isVipActive) {
            messageSender.sendTextMessage(chatId, vipMessage);
        } else {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–ø—Ü–∏–∏ –ø–æ–∫—É–ø–∫–∏ –¥–ª—è –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö VIP
            messageSender.sendTextMessageWithKeyboard(
                    chatId,
                    vipMessage,
                    keyboardService.createVipPlansKeyboard()
            );
        }
    }

    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –ø–ª–∞–Ω–∞ VIP-–ø–æ–¥–ø–∏—Å–∫–∏
     */
    public void processVipPlanSelection(Long chatId, String planType) {
        Double price = subscriptionService.getSubscriptionPrice(planType);
        String readablePlanType = profileService.getReadablePlanType(planType);
        
        if (price <= 0) {
            messageSender.sendTextMessage(chatId, "‚ö†Ô∏è –í—ã–±—Ä–∞–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.");
            return;
        }
        
        try {
            // –°–æ–∑–¥–∞–µ–º –ø–æ–¥–ø–∏—Å–∫—É –≤ —Å—Ç–∞—Ç—É—Å–µ "pending"
            Subscription subscription = subscriptionService.createSubscription(chatId, planType);
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–ø–ª–∞—Ç–µ (—ç–º—É–ª—è—Ü–∏—è)
            String confirmationMessage = String.format(
                "üîÑ –í—ã –≤—ã–±—Ä–∞–ª–∏ —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω ¬´%s¬ª –∑–∞ %.0f —Ä—É–±.\n\n" +
                "–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ–ø–ª–∞—Ç—É, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.\n\n" +
                "ID –∑–∞–∫–∞–∑–∞: %d",
                readablePlanType, price, subscription.getId()
            );
            
            messageSender.sendTextMessageWithKeyboard(
                    chatId,
                    confirmationMessage,
                    keyboardService.createPaymentConfirmationKeyboard(subscription.getId())
            );
            
        } catch (Exception e) {
            System.out.println("DEBUG: –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏: " + e.getMessage());
            messageSender.sendTextMessage(chatId, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
        }
    }

    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–ª–∞—Ç—ã VIP-–ø–æ–¥–ø–∏—Å–∫–∏ (—ç–º—É–ª—è—Ü–∏—è)
     */
    public void processPaymentConfirmation(Long chatId, Long subscriptionId) {
        try {
            // –≠–º—É–ª–∏—Ä—É–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
            String transactionId = "tx_" + System.currentTimeMillis();
            String paymentMethod = "card";
            
            // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å–∫—É
            Subscription subscription = subscriptionService.confirmPayment(subscriptionId, transactionId, paymentMethod);
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ VIP
            String successMessage = String.format(
                "‚úÖ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞—à VIP-—Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –¥–æ %s\n\n" +
                "üëë –¢–µ–ø–µ—Ä—å –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è —Å –ø–æ–º–µ—Ç–∫–æ–π VIP\n" +
                "üì± –î—Ä—É–≥–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É–≤–∏–¥—è—Ç –≤–∞—à username –¥–ª—è –±—ã—Å—Ç—Ä–æ–π —Å–≤—è–∑–∏\n" +
                "üîç –í—ã –±—É–¥–µ—Ç–µ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤—ã—à–µ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –ø–æ–∏—Å–∫–∞",
                subscription.getEndDate().toLocalDate()
            );
            
            messageSender.sendTextMessageWithKeyboard(
                    chatId,
                    successMessage,
                    keyboardService.createMainKeyboard()
            );
            
        } catch (Exception e) {
            System.out.println("DEBUG: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –æ–ø–ª–∞—Ç—ã: " + e.getMessage());
            messageSender.sendTextMessage(chatId, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ VIP-—Å—Ç–∞—Ç—É—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.");
        }
    }

    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–º–µ–Ω—É –æ–ø–ª–∞—Ç—ã
     */
    public void processPaymentCancel(Long chatId, Long subscriptionId) {
        try {
            subscriptionService.failPayment(subscriptionId, "–û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º");
            
            messageSender.sendTextMessageWithKeyboard(
                    chatId,
                    "üõë –û–ø–ª–∞—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞. –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ VIP-—Å—Ç–∞—Ç—É—Å –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /vip",
                    keyboardService.createMainKeyboard()
            );
            
        } catch (Exception e) {
            System.out.println("DEBUG: –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –æ–ø–ª–∞—Ç—ã: " + e.getMessage());
            messageSender.sendTextMessage(chatId, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –æ–ø–ª–∞—Ç—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
        }
    }
}