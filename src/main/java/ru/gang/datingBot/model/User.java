package ru.gang.datingBot.model;

import jakarta.persistence.*;
import java.time.LocalDateTime;
import lombok.Getter;
import lombok.Setter;

@Entity
@Table(name = "users", schema = "public")
public class User {

  @Id
  @GeneratedValue(strategy = GenerationType.IDENTITY)
  private Long id;

  @Column(unique = true, nullable = false)
  private Long telegramId;

  private String username;
  
  // –î–æ–±–∞–≤–ª–µ–Ω—ã –ø–æ–ª—è –≤–æ–∑—Ä–∞—Å—Ç–∞ –∏ –ø–æ–ª–∞
  private Integer age;
  
  @Column(length = 10)
  private String gender; // "male", "female", "other"
  
  private Double latitude;
  private Double longitude;
  @Column(name = "is_active")
  private Boolean active = false;
  private Integer searchRadius = 5;
  private LocalDateTime lastActive = LocalDateTime.now();
  private LocalDateTime deactivateAt;
  
  @Column(nullable = true)
  private String firstName;

  @Column(nullable = true)
  private String lastName;

  @Column(nullable = true, unique = true)
  private String phoneNumber;
  
  // –ü–æ–ª—è –ø—Ä–æ—Ñ–∏–ª—è
  @Column(nullable = true, length = 1000)
  private String description;
  
  @Column(nullable = true, length = 500)
  private String interests;
  
  @Column(nullable = true)
  private String photoFileId; // Telegram file ID –¥–ª—è —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è
  
  // –î–æ–±–∞–≤–ª–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞
  @Column(nullable = true)
  private Integer minAgePreference;
  
  @Column(nullable = true)
  private Integer maxAgePreference;
  
  @Column(nullable = true, length = 10)
  private String genderPreference; // "male", "female", "any"
  
  // –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç–∏ –ø—Ä–æ—Ñ–∏–ª—è
  @Column(nullable = false, columnDefinition = "boolean default false")
  private Boolean profileCompleted = false;
  
  // –ì–µ—Ç—Ç–µ—Ä—ã –∏ —Å–µ—Ç—Ç–µ—Ä—ã
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public Long getTelegramId() {
    return telegramId;
  }

  public void setTelegramId(Long telegramId) {
    this.telegramId = telegramId;
  }

  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  public Integer getAge() {
    return age;
  }

  public void setAge(Integer age) {
    this.age = age;
  }

  public String getGender() {
    return gender;
  }

  public void setGender(String gender) {
    this.gender = gender;
  }

  public Double getLatitude() {
    return latitude;
  }

  public void setLatitude(Double latitude) {
    this.latitude = latitude;
  }

  public Double getLongitude() {
    return longitude;
  }

  public void setLongitude(Double longitude) {
    this.longitude = longitude;
  }

  public Boolean getActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }

  public Integer getSearchRadius() {
    return searchRadius;
  }

  public void setSearchRadius(Integer searchRadius) {
    this.searchRadius = searchRadius;
  }

  public LocalDateTime getLastActive() {
    return lastActive;
  }

  public void setLastActive(LocalDateTime lastActive) {
    this.lastActive = lastActive;
  }

  public LocalDateTime getDeactivateAt() {
    return deactivateAt;
  }

  public void setDeactivateAt(LocalDateTime deactivateAt) {
    this.deactivateAt = deactivateAt;
  }

  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }

  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public String getInterests() {
    return interests;
  }

  public void setInterests(String interests) {
    this.interests = interests;
  }

  public String getPhotoFileId() {
    return photoFileId;
  }

  public void setPhotoFileId(String photoFileId) {
    this.photoFileId = photoFileId;
  }

  public Integer getMinAgePreference() {
    return minAgePreference;
  }

  public void setMinAgePreference(Integer minAgePreference) {
    this.minAgePreference = minAgePreference;
  }

  public Integer getMaxAgePreference() {
    return maxAgePreference;
  }

  public void setMaxAgePreference(Integer maxAgePreference) {
    this.maxAgePreference = maxAgePreference;
  }

  public String getGenderPreference() {
    return genderPreference;
  }

  public void setGenderPreference(String genderPreference) {
    this.genderPreference = genderPreference;
  }

  public Boolean getProfileCompleted() {
    return profileCompleted;
  }

  public void setProfileCompleted(Boolean profileCompleted) {
    this.profileCompleted = profileCompleted;
  }
  
  // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  public String getProfileInfo() {
    StringBuilder profile = new StringBuilder();
    profile.append("üìã –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n\n");
    
    profile.append("üë§ –ò–º—è: ").append(firstName != null ? firstName : "–ù–µ —É–∫–∞–∑–∞–Ω–æ").append("\n");
    profile.append("üìõ –§–∞–º–∏–ª–∏—è: ").append(lastName != null ? lastName : "–ù–µ —É–∫–∞–∑–∞–Ω–æ").append("\n");
    profile.append("üîç Username: ").append(username != null ? "@" + username : "–ù–µ —É–∫–∞–∑–∞–Ω–æ").append("\n");
    
    // –î–æ–±–∞–≤–ª–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–æ–∑—Ä–∞—Å—Ç–µ –∏ –ø–æ–ª–µ
    profile.append("üéÇ –í–æ–∑—Ä–∞—Å—Ç: ").append(age != null ? age : "–ù–µ —É–∫–∞–∑–∞–Ω").append("\n");
    profile.append("‚öß –ü–æ–ª: ").append(getGenderDisplay()).append("\n");
    
    if (description != null && !description.isEmpty()) {
      profile.append("\nüìù –û —Å–µ–±–µ:\n").append(description).append("\n");
    } else {
      profile.append("\nüìù –û —Å–µ–±–µ: –ù–µ —É–∫–∞–∑–∞–Ω–æ\n");
    }
    
    if (interests != null && !interests.isEmpty()) {
      profile.append("\n‚≠ê –ò–Ω—Ç–µ—Ä–µ—Å—ã:\n").append(interests).append("\n");
    } else {
      profile.append("\n‚≠ê –ò–Ω—Ç–µ—Ä–µ—Å—ã: –ù–µ —É–∫–∞–∑–∞–Ω–æ\n");
    }
    
    profile.append("\nüì± –¢–µ–ª–µ—Ñ–æ–Ω: ").append(phoneNumber != null ? phoneNumber : "–ù–µ —É–∫–∞–∑–∞–Ω–æ").append("\n");
    profile.append("üñº –§–æ—Ç–æ: ").append(photoFileId != null ? "–ó–∞–≥—Ä—É–∂–µ–Ω–æ" : "–ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ").append("\n");
    
    // –î–æ–±–∞–≤–ª–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞
    profile.append("\nüîç –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞:\n");
    String ageRange = "–õ—é–±–æ–π";
    if (minAgePreference != null && maxAgePreference != null) {
      ageRange = minAgePreference + " - " + maxAgePreference + " –ª–µ—Ç";
    } else if (minAgePreference != null) {
      ageRange = "–æ—Ç " + minAgePreference + " –ª–µ—Ç";
    } else if (maxAgePreference != null) {
      ageRange = "–¥–æ " + maxAgePreference + " –ª–µ—Ç";
    }
    profile.append("üéØ –í–æ–∑—Ä–∞—Å—Ç: ").append(ageRange).append("\n");
    profile.append("üë• –ü–æ–ª: ").append(getGenderPreferenceDisplay()).append("\n");
    
    return profile.toString();
  }
  
  // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–æ—Ü–µ–Ω—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç–∏ –ø—Ä–æ—Ñ–∏–ª—è
  public int getProfileCompletionPercentage() {
    int totalFields = 8; // firstName, lastName, username, age, gender, description, interests, photoFileId
    int completedFields = 0;
    
    if (firstName != null && !firstName.isEmpty()) completedFields++;
    if (lastName != null && !lastName.isEmpty()) completedFields++;
    if (username != null && !username.isEmpty()) completedFields++;
    if (age != null) completedFields++;
    if (gender != null && !gender.isEmpty()) completedFields++;
    if (description != null && !description.isEmpty()) completedFields++;
    if (interests != null && !interests.isEmpty()) completedFields++;
    if (photoFileId != null && !photoFileId.isEmpty()) completedFields++;
    
    return (completedFields * 100) / totalFields;
  }
  
  // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–ª–∞
  public String getGenderDisplay() {
    if (gender == null) return "–ù–µ —É–∫–∞–∑–∞–Ω";
    return switch (gender) {
      case "male" -> "–ú—É–∂—Å–∫–æ–π";
      case "female" -> "–ñ–µ–Ω—Å–∫–∏–π";
      case "other" -> "–î—Ä—É–≥–æ–π";
      default -> "–ù–µ —É–∫–∞–∑–∞–Ω";
    };
  }
  
  // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –ø–æ –ø–æ–ª—É
  public String getGenderPreferenceDisplay() {
    if (genderPreference == null) return "–õ—é–±–æ–π";
    return switch (genderPreference) {
      case "male" -> "–ú—É–∂—Å–∫–æ–π";
      case "female" -> "–ñ–µ–Ω—Å–∫–∏–π";
      case "any" -> "–õ—é–±–æ–π";
      default -> "–õ—é–±–æ–π";
    };
  }
  
  // –≠–∫—Ä–∞–Ω–∏—Ä—É–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã Markdown
  private String escapeMarkdown(String text) {
    if (text == null) return "";
    return text
            .replace("_", "\\_")
            .replace("*", "\\*")
            .replace("[", "\\[")
            .replace("]", "\\]")
            .replace("`", "\\`");
  }
}